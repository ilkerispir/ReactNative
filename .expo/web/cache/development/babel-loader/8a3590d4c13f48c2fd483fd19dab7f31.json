{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ikeri\\\\OneDrive\\\\Belgeler\\\\GitHub\\\\ReactNative\\\\App.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Ilker from \"./ilker\";\nexport default function App() {\n  var _useState = useState([{\n    name: 'deneme',\n    key: '1'\n  }, {\n    name: 'deneme',\n    key: '2'\n  }, {\n    name: 'deneme',\n    key: '3'\n  }, {\n    name: 'deneme',\n    key: '4'\n  }, {\n    name: 'deneme',\n    key: '5'\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      people = _useState2[0],\n      setPeople = _useState2[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    numColumns: 2,\n    keyExtractor: function keyExtractor(item) {\n      return item.key;\n    },\n    data: people,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(Text, {\n        style: styles.item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }\n      }, item.name);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#777',\n    padding: 8,\n    margin: 10,\n    width: 200\n  },\n  item: {\n    padding: 50,\n    backgroundColor: 'red',\n    color: 'white',\n    margin: 5\n  }\n});","map":{"version":3,"sources":["C:/Users/ikeri/OneDrive/Belgeler/GitHub/ReactNative/App.js"],"names":["React","useState","Ilker","App","name","key","people","setPeople","styles","container","item","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","input","borderWidth","borderColor","padding","margin","width","color"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAEA,OAAOC,KAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA,kBACAF,QAAQ,CAAC,CACnC;AAACG,IAAAA,IAAI,EAAE,QAAP;AAAiBC,IAAAA,GAAG,EAAE;AAAtB,GADmC,EAEnC;AAACD,IAAAA,IAAI,EAAE,QAAP;AAAiBC,IAAAA,GAAG,EAAE;AAAtB,GAFmC,EAGnC;AAACD,IAAAA,IAAI,EAAE,QAAP;AAAiBC,IAAAA,GAAG,EAAE;AAAtB,GAHmC,EAInC;AAACD,IAAAA,IAAI,EAAE,QAAP;AAAiBC,IAAAA,GAAG,EAAE;AAAtB,GAJmC,EAKnC;AAACD,IAAAA,IAAI,EAAE,QAAP;AAAiBC,IAAAA,GAAG,EAAE;AAAtB,GALmC,CAAD,CADR;AAAA;AAAA,MACrBC,MADqB;AAAA,MACbC,SADa;;AAS5B,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACI,IAAA,UAAU,EAAE,CADhB;AAEI,IAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,aAAUA,IAAI,CAACL,GAAf;AAAA,KAFlB;AAGI,IAAA,IAAI,EAAEC,MAHV;AAII,IAAA,UAAU,EAAE;AAAA,UAAEI,IAAF,QAAEA,IAAF;AAAA,aACZ,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BA,IAAI,CAACN,IAAhC,CADY;AAAA,KAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAYD;AAED,IAAMI,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GADoB;AAO/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,WAAW,EAAE,CADR;AAELC,IAAAA,WAAW,EAAE,MAFR;AAGLC,IAAAA,OAAO,EAAE,CAHJ;AAILC,IAAAA,MAAM,EAAE,EAJH;AAKLC,IAAAA,KAAK,EAAE;AALF,GAPwB;AAc/BZ,EAAAA,IAAI,EAAE;AACJU,IAAAA,OAAO,EAAE,EADL;AAEJN,IAAAA,eAAe,EAAE,KAFb;AAGJS,IAAAA,KAAK,EAAE,OAHH;AAIJF,IAAAA,MAAM,EAAE;AAJJ;AAdyB,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, Text, View, TextInput, FlatList } from 'react-native';\nimport Ilker from './ilker';\n\nexport default function App() {\n  const [people, setPeople] = useState([\n    {name: 'deneme', key: '1'},\n    {name: 'deneme', key: '2'},\n    {name: 'deneme', key: '3'},\n    {name: 'deneme', key: '4'},\n    {name: 'deneme', key: '5'},\n  ])\n\n  return (\n    <View style={styles.container}>\n      <FlatList \n          numColumns={2}\n          keyExtractor={(item) => item.key}\n          data={people}\n          renderItem={({item}) => (\n          <Text style={styles.item}>{item.name}</Text>\n          )}\n          />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#777',\n    padding: 8,\n    margin: 10,\n    width: 200\n  },\n  item: {\n    padding: 50,\n    backgroundColor: 'red',\n    color: 'white',\n    margin: 5\n  }\n});\n"]},"metadata":{},"sourceType":"module"}